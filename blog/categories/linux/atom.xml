<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 脑波网]]></title>
  <link href="http://dexterdeng.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://dexterdeng.github.com/"/>
  <updated>2013-01-15T15:28:42+08:00</updated>
  <id>http://dexterdeng.github.com/</id>
  <author>
    <name><![CDATA[Dexter Deng]]></name>
    <email><![CDATA[dexterdeng@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[system备忘录]]></title>
    <link href="http://dexterdeng.github.com/blog/2013/01/15/systembei-wang-lu/"/>
    <updated>2013-01-15T15:24:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2013/01/15/systembei-wang-lu</id>
    <content type="html"><![CDATA[<ul>
<li>要想fb功能work， 需要确保认证的cacert.pem 在/public/</li>
<li><p>以下配置需要视具体情况变更</p>

<p>ENV["MAGICK_CODER_MODULE_PATH"]="/usr/lib64/ImageMagick-6.7.0/modules-Q16/coders/"
ENV["GS_FONTPATH"] = "/usr/share/ghostscript/fonts"</p>

<h1>ENV["MAGICK_CONFIGURE_PATH"]="/usr/local/lib/ImageMagick-6.6.3/config"</h1>

<p>ENV["GS_LIB"] = "/usr/share/ghostscript/fonts"</p>

<p>Paperclip.options[:command_path] = "/usr/bin"
Paperclip.options[:swallow_stderr] = false</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[install tivoli]]></title>
    <link href="http://dexterdeng.github.com/blog/2013/01/15/install-tivoli/"/>
    <updated>2013-01-15T15:21:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2013/01/15/install-tivoli</id>
    <content type="html"><![CDATA[<pre><code>rpm -ivh gsk*
rpm -ivh TIVsm-* tsm-6.2.2.6-P1MH8.x86_64.rpm
yum install compat-libstdc++-33
rpm -ivh TIVsm-* tsm-6.2.2.6-P1MH8.x86_64.rpm
/opt/tivoli/tsm/client/ba/bin/dsmconf
dsmc
/etc/rc.d/init.d/dsmcad restart
/etc/rc.d/init.d/dsmc restart
ps aux | grep dsmc
cat /opt/tivoli/tsm/client/ba/bin/dsmsched.log
/etc/rc.d/init.d/dsmcad restart
/etc/rc.d/init.d/dsmc restart
ps aux | grep dsmc
cat /opt/tivoli/tsm/client/ba/bin/dsmsched.log
cat /opt/tivoli/tsm/client/ba/bin/dsmsched.log
cat /opt/tivoli/tsm/client/ba/bin/dsmsched.log
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[configure php + nginx ]]></title>
    <link href="http://dexterdeng.github.com/blog/2013/01/15/configure-php-plus-nginx/"/>
    <updated>2013-01-15T15:06:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2013/01/15/configure-php-plus-nginx</id>
    <content type="html"><![CDATA[<p>nginx装好后， 开始装php。</p>

<p>记住以下几点：</p>

<ul>
<li>务必装教新php, 新版稳定版事5.3.30</li>
<li>php-fpm已加入php核心，安装时注意配置 --enable-fpm</li>
<li>安装时务必--with-mysql</li>
<li><p>如果事64位，记住编译时加上 --with-libdir=lib64 ,否则会出现如下问题:</p>

<p>configure:60376: checking for mysql_error in -lmysqlclient
configure:60395: gcc -o conftest -I/usr/include -g -O2  -Wl,-rpath,/usr/lib/mysql -L/usr/lib/mysql -L/usr/lib  -Wl,-rpath,/usr/kerberos/lib64 -L/usr/kerberos/lib64 -Wl,-rpath,/usr -L/usr conftest.c -lmysqlclient  -lz -lpng -lz -lcurl -lz -lrt -lresolv -lm -ldl -lnsl  -lxml2 -lz -lm -lssl -lcrypto -ldl -lz -lcurl -ldl -lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err -lidn -lssl -lcrypto -lz -lxml2 -lz -lm 1>&amp;5
/usr/bin/ld: skipping incompatible /usr/lib/mysql/libmysqlclient.so when searching for -lmysqlclient
/usr/bin/ld: skipping incompatible /usr/lib/mysql/libmysqlclient.a when searching for -lmysqlclient
/usr/bin/ld: cannot find -lmysqlclient
collect2: ld returned 1 exit status</p></li>
</ul>


<h4>准备</h4>

<pre><code>yum install mysql-devel
yum install nginx
chkconfig --levels 235 nginx on
/etc/init.d/nginx start
</code></pre>

<h4>安装</h4>

<pre><code># yum install   php-mysql php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-magickwand php-magpierss php-mbstring php-mcrypt php-mssql php-shout php-snmp php-soap php-tidy
#yum install php-pecl-apc


wget http://ca1.php.net/distributions/php-5.3.20.tar.gz
tar -xzvf php-5.3.20.tar.gz
 ./configure --with-libdir=lib64  --with-mysql   --enable-fpm    --enable-libgcc   --with-openssl --with-zlib
make
make install

拷贝配置文件

/etc/init.d/php-fpm stop
/etc/init.d/php-fpm start
</code></pre>

<ul>
<li><p>Then open <code>/etc/php.ini</code> and set <code>cgi.fix_pathinfo=0</code>:</p></li>
<li><p>you should set date.timezone in /etc/php.ini:</p>

<p>[...]
[Date]
; Defines the default timezone used by the date functions
; http://www.php.net/manual/en/datetime.configuration.php#ini.date.timezone
date.timezone = "Europe/Berlin"
[...]</p>

<p>从<code>cat /etc/sysconfig/clock</code>可以查到时区</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[postfix mailq 操作]]></title>
    <link href="http://dexterdeng.github.com/blog/2013/01/15/postfix-mailq-cao-zuo/"/>
    <updated>2013-01-15T14:56:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2013/01/15/postfix-mailq-cao-zuo</id>
    <content type="html"><![CDATA[<p>如果你要套用其中一笔Queue 中的邮件，可以先用mailq 或postqueue 指令查询出或筛选出你要重新排Queue 的邮件ID，并使用以下指令重新排Queue：</p>

<pre><code>postsuper -r 7B8CE830BD
</code></pre>

<p>若要套用「所有」邮件，可以使用特殊的ALL 关键字：</p>

<pre><code>postsuper -r ALL
</code></pre>

<p>最后再强制重送所有的信件</p>

<pre><code>postqueue -f
</code></pre>

<p>检视剩下多少Queue</p>

<pre><code>postqueue -p
</code></pre>

<p>若还是不行的话… 那就考虑删除掉吧XD</p>

<p>列出目前在 Mail Queue 中的信件</p>

<pre><code>mailq
</code></pre>

<p>删除某一个队列的邮件</p>

<pre><code>postsuper -d queue_id
</code></pre>

<p>删除所有在 Queue 中的邮件</p>

<pre><code>postsuper -d ALL
</code></pre>

<p>删除所有正在deferred 队列中的邮件( 删除曾经发送失败的信)</p>

<pre><code>postsuper -d ALL deferred
</code></pre>

<p>删除所有正在deferred 队列中的邮件( 可看出哪些信被删除了)</p>

<pre><code>find /var/spool/postfix/deferred -type f -exec rm -vf \{\} \;
</code></pre>

<p>删掉「三天以前」无法发出的邮件</p>

<p>    find /var/spool/postfix/deferred -type f -mtime +3 -exec rm -f {} \;</p>

<p>列出目前所有无法发出的邮件</p>

<p>    find /var/spool/postfix/deferred -type f -exec ls -l –time-style=+%Y-%m-%d_%H:%M:%S {} \;</p>

<p>删除超过5 天的"defer" 队列中的退信纪录</p>

<p>    find /var/spool/postfix/defer -type f -mtime +5 -exec rm -f {} \;</p>

<p>若你发现在MailQ里面有相同的地址大量寄送垃圾信件时，可以透过下面的方式来挡掉…</p>

<pre><code># vi /etc/postfix/header_checks
# 加入要挡掉的来原信
/^From:.service\@kcg\.gov\.tw/ DISCARD Attack Mail

# postmap -q – regexp:/etc/postfix/header_checks &lt; /etc/postfix/header_checks
# 重新让 Postfix 新 header_checks 生效

# mailq | grep "xxx@abc.com" | cut -d " " -f1 | cut -d'*' -f1 | postsuper -d -
# 删掉所有来自xxx@abc.com的MailQ
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ Linux Grep OR , Grep AND, Grep NOT]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/11/03/linux-grep-or/"/>
    <updated>2012-11-03T00:11:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/11/03/linux-grep-or</id>
    <content type="html"><![CDATA[<p><strong>Question:</strong> Can you explain how to use <code>OR</code>, <code>AND</code> and <code>NOT</code> operators in Unix grep command with some examples?</p>

<p><strong>Answer:</strong> In grep, we have options equivalent to <code>OR</code> and <code>NOT</code> operators. There is no grep <code>AND</code> opearator. But, you can simulate <code>AND</code> using patterns. The examples mentioned below will help you to understand how to use <code>OR</code>, <code>AND</code> and <code>NOT</code> in Linux grep command.</p>

<p>The following employee.txt file is used in the following examples.</p>

<pre><code>$ cat employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
500  Randy   Manager    Sales       $6,000
</code></pre>

<p>You already knew that grep is extremely powerful based on these grep command examples.</p>

<h2>Grep OR Operator</h2>

<p>Use any one of the following 4 methods for grep OR. I prefer method number 3 mentioned below for grep OR operator.</p>

<h3>1. Grep OR Using \|</h3>

<p>If you use the grep command without any option, you need to use <code>\|</code> to separate multiple patterns for the or condition.</p>

<pre><code>grep 'pattern1\|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Without the back slash in front of the pipe, the following will not work.</p>

<pre><code>$ grep 'Tech\|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>2. Grep OR Using -E</h3>

<p><code>grep -E</code> option is for extended regexp. If you use the grep command with <code>-E</code> option, you just need to use | to separate multiple patterns for the or condition.</p>

<pre><code>grep -E 'pattern1|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Just use the | to separate multiple OR patterns.</p>

<pre><code>$ grep -E 'Tech|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>3. Grep OR Using egrep</h3>

<p>egrep is exactly same as <code>grep -E</code>. So, use egrep (without any option) and separate multiple patterns for the or condition.</p>

<pre><code>egrep 'pattern1|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Just use the | to separate multiple OR patterns.</p>

<pre><code>$ egrep 'Tech|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>4. Grep OR Using grep -e</h3>

<p>Using grep -e option you can pass only one parameter. Use multiple <code>-e</code> option in a single command to use multiple patterns for the or condition.</p>

<pre><code>grep -e pattern1 -e pattern2 filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Use multiple <code>-e</code> option with grep for the multiple OR patterns.</p>

<pre><code>$ grep -e Tech -e Sales employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
Grep AND
</code></pre>

<h3>5. Grep AND using <code>-E ‘pattern1.*pattern2'</code></h3>

<p>There is no AND operator in grep. But, you can simulate AND using grep -E option.</p>

<pre><code>grep -E 'pattern1.*pattern2' filename
grep -E 'pattern1.*pattern2|pattern2.*pattern1' filename
</code></pre>

<p>The following example will grep all the lines that contain both “Dev” and “Tech” in it (in the same order).</p>

<pre><code>$ grep -E 'Dev.*Tech' employee.txt
200  Jason   Developer  Technology  $5,500
</code></pre>

<p>The following example will grep all the lines that contain both “Manager” and “Sales” in it (in any order).</p>

<pre><code>$ grep -E 'Manager.*Sales|Sales.*Manager' employee.txt
</code></pre>

<p>Note: Using regular expressions in grep is very powerful if you know how to use it effectively.</p>

<h3>6. Grep AND using Multiple grep command</h3>

<p>You can also use multiple grep command separated by pipe to simulate AND scenario.</p>

<pre><code>grep -E 'pattern1' filename | grep -E 'pattern2'
</code></pre>

<p>The following example will grep all the lines that contain both “Manager” and “Sales” in the same line.</p>

<pre><code>$ grep Manager employee.txt | grep Sales
100  Thomas  Manager    Sales       $5,000
500  Randy   Manager    Sales       $6,000
Grep NOT
</code></pre>

<h3>7. Grep NOT using grep -v</h3>

<p>Using grep <code>-v</code> you can simulate the NOT conditions. <code>-v</code> option is for invert match. i.e It matches all the lines except the given pattern.</p>

<pre><code>grep -v 'pattern1' filename
</code></pre>

<p>For example, display all the lines except those that contains the keyword “Sales”.</p>

<pre><code>$ grep -v Sales employee.txt
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
</code></pre>

<p>You can also combine NOT with other operator to get some powerful combinations.</p>

<p>For example, the following will display either Manager or Developer (bot ignore Sales).</p>

<pre><code>$ egrep 'Manager|Developer' employee.txt | grep -v Sales
200  Jason   Developer  Technology  $5,500
400  Nisha   Manager    Marketing   $9,500
</code></pre>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[脑波网]]></title>
  <link href="http://dexterdeng.github.com/atom.xml" rel="self"/>
  <link href="http://dexterdeng.github.com/"/>
  <updated>2012-11-03T17:12:28+08:00</updated>
  <id>http://dexterdeng.github.com/</id>
  <author>
    <name><![CDATA[Dexter Deng]]></name>
    <email><![CDATA[dexterdeng@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[skip vadation or skip flilter]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/11/03/skip-vadation-or-skip-flilter/"/>
    <updated>2012-11-03T17:09:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/11/03/skip-vadation-or-skip-flilter</id>
    <content type="html"><![CDATA[<h3>run all validation and filters</h3>

<pre><code>@user.save
</code></pre>

<h3>run  no validation but all filters</h3>

<pre><code>@user.save(false)
</code></pre>

<h3>run  no validation and no filters</h3>

<pre><code>@user.send(:update_without_callbacks)
</code></pre>

<p>since it is private, you need to use send</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Never call save/update in before/after_save filter]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/11/03/never-call-save-update-attribute-update-attributes-in-after-slash-after-save-filter/"/>
    <updated>2012-11-03T17:02:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/11/03/never-call-save-update-attribute-update-attributes-in-after-slash-after-save-filter</id>
    <content type="html"><![CDATA[<p>Check two source code first:</p>

<pre><code>def update_attribute(name, value)
  send(name.to_s + '=', value)
  save(false)
end
</code></pre>

<p>and</p>

<pre><code> def update_attributes(attributes)
   self.attributes = attributes
   save
 end
</code></pre>

<p>Check the source code, these 2 <code>update</code> methods contain <code>save</code>. in fact,
<code>update</code>  always means <code>save</code>.  these methods can&#8217;t be in <code>after_save</code>,
<code>before_save</code>. as  if you call <code>save</code>, <code>save</code> trigger  <code>before_save/after_save</code>,
and <code>before_save/after_save</code> trigger <code>save</code> again. &#8230;  No ending.</p>

<p>This is very important.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ Linux Grep OR , Grep AND, Grep NOT]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/11/03/linux-grep-or/"/>
    <updated>2012-11-03T00:11:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/11/03/linux-grep-or</id>
    <content type="html"><![CDATA[<p><strong>Question:</strong> Can you explain how to use <code>OR</code>, <code>AND</code> and <code>NOT</code> operators in Unix grep command with some examples?</p>

<p><strong>Answer:</strong> In grep, we have options equivalent to <code>OR</code> and <code>NOT</code> operators. There is no grep <code>AND</code> opearator. But, you can simulate <code>AND</code> using patterns. The examples mentioned below will help you to understand how to use <code>OR</code>, <code>AND</code> and <code>NOT</code> in Linux grep command.</p>

<p>The following employee.txt file is used in the following examples.</p>

<pre><code>$ cat employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
500  Randy   Manager    Sales       $6,000
</code></pre>

<p>You already knew that grep is extremely powerful based on these grep command examples.</p>

<h2>Grep OR Operator</h2>

<p>Use any one of the following 4 methods for grep OR. I prefer method number 3 mentioned below for grep OR operator.</p>

<h3>1. Grep OR Using \|</h3>

<p>If you use the grep command without any option, you need to use <code>\|</code> to separate multiple patterns for the or condition.</p>

<pre><code>grep 'pattern1\|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Without the back slash in front of the pipe, the following will not work.</p>

<pre><code>$ grep 'Tech\|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>2. Grep OR Using -E</h3>

<p><code>grep -E</code> option is for extended regexp. If you use the grep command with <code>-E</code> option, you just need to use | to separate multiple patterns for the or condition.</p>

<pre><code>grep -E 'pattern1|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Just use the | to separate multiple OR patterns.</p>

<pre><code>$ grep -E 'Tech|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>3. Grep OR Using egrep</h3>

<p>egrep is exactly same as <code>grep -E</code>. So, use egrep (without any option) and separate multiple patterns for the or condition.</p>

<pre><code>egrep 'pattern1|pattern2' filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Just use the | to separate multiple OR patterns.</p>

<pre><code>$ egrep 'Tech|Sales' employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
</code></pre>

<h3>4. Grep OR Using grep -e</h3>

<p>Using grep -e option you can pass only one parameter. Use multiple <code>-e</code> option in a single command to use multiple patterns for the or condition.</p>

<pre><code>grep -e pattern1 -e pattern2 filename
</code></pre>

<p>For example, grep either Tech or Sales from the employee.txt file. Use multiple <code>-e</code> option with grep for the multiple OR patterns.</p>

<pre><code>$ grep -e Tech -e Sales employee.txt
100  Thomas  Manager    Sales       $5,000
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
500  Randy   Manager    Sales       $6,000
Grep AND
</code></pre>

<h3>5. Grep AND using <code>-E ‘pattern1.*pattern2'</code></h3>

<p>There is no AND operator in grep. But, you can simulate AND using grep -E option.</p>

<pre><code>grep -E 'pattern1.*pattern2' filename
grep -E 'pattern1.*pattern2|pattern2.*pattern1' filename
</code></pre>

<p>The following example will grep all the lines that contain both “Dev” and “Tech” in it (in the same order).</p>

<pre><code>$ grep -E 'Dev.*Tech' employee.txt
200  Jason   Developer  Technology  $5,500
</code></pre>

<p>The following example will grep all the lines that contain both “Manager” and “Sales” in it (in any order).</p>

<pre><code>$ grep -E 'Manager.*Sales|Sales.*Manager' employee.txt
</code></pre>

<p>Note: Using regular expressions in grep is very powerful if you know how to use it effectively.</p>

<h3>6. Grep AND using Multiple grep command</h3>

<p>You can also use multiple grep command separated by pipe to simulate AND scenario.</p>

<pre><code>grep -E 'pattern1' filename | grep -E 'pattern2'
</code></pre>

<p>The following example will grep all the lines that contain both “Manager” and “Sales” in the same line.</p>

<pre><code>$ grep Manager employee.txt | grep Sales
100  Thomas  Manager    Sales       $5,000
500  Randy   Manager    Sales       $6,000
Grep NOT
</code></pre>

<h3>7. Grep NOT using grep -v</h3>

<p>Using grep <code>-v</code> you can simulate the NOT conditions. <code>-v</code> option is for invert match. i.e It matches all the lines except the given pattern.</p>

<pre><code>grep -v 'pattern1' filename
</code></pre>

<p>For example, display all the lines except those that contains the keyword “Sales”.</p>

<pre><code>$ grep -v Sales employee.txt
200  Jason   Developer  Technology  $5,500
300  Raj     Sysadmin   Technology  $7,000
400  Nisha   Manager    Marketing   $9,500
</code></pre>

<p>You can also combine NOT with other operator to get some powerful combinations.</p>

<p>For example, the following will display either Manager or Developer (bot ignore Sales).</p>

<pre><code>$ egrep 'Manager|Developer' employee.txt | grep -v Sales
200  Jason   Developer  Technology  $5,500
400  Nisha   Manager    Marketing   $9,500
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integrate tire elasticsearch on bad server]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/11/01/integrate-tire-plus-elasticsearch-on-bad-server/"/>
    <updated>2012-11-01T13:24:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/11/01/integrate-tire-plus-elasticsearch-on-bad-server</id>
    <content type="html"><![CDATA[<p>Installing the JRE
Type the following commands into your SSH terminal.</p>

<pre><code>apt-get install openjdk-6-jdk 
</code></pre>

<p>You should also have JDK 6 or above installed.</p>

<pre><code>$ curl -k -L -o elasticsearch-0.19.0.tar.gz http://github.com/downloads/elasticsearch/elasticsearch/elasticsearch-0.19.0.tar.gz
$ tar -zxvf elasticsearch-0.19.0.tar.gz
$ ./elasticsearch-0.19.0/bin/elasticsearch -f
</code></pre>

<p>How to make it manage by ubuntu better.</p>

<pre><code>$ cp ./elasticsearch-0.19 /user/local/elasticsearch
</code></pre>

<p>make <code>/etc/init.d/elasticsearch</code></p>

<pre><code>$ vi /etc/init.d/elasticsearch


### END INIT INFO
ES_HOME=/usr/local/elasticsearch
export ES_MIN_MEM=32m
export ES_MAX_MEM=128m
DAEMON=$ES_HOME/bin/elasticsearch
NAME=elasticsearch
DESC=elasticsearch
PID_FILE=/var/run/$NAME.pid
LOG_DIR=/var/log/$NAME
DATA_DIR=/var/lib/$NAME
WORK_DIR=/tmp/$NAME
CONFIG_FILE=/etc/$NAME/elasticsearch.yml
DAEMON_OPTS="-p $PID_FILE -Des.config=$CONFIG_FILE -Des.path.home=$ES_HOME -Des.path.logs=$LOG_DIR -        Des.path.data=$DATA_DIR -Des.path.work=$WORK_DIR"


test -x $DAEMON || exit 0

set -e

case "$1" in
  start)
    echo -n "Starting $DESC: "
    mkdir -p $LOG_DIR $DATA_DIR $WORK_DIR
    if start-stop-daemon --start --pidfile $PID_FILE --startas $DAEMON -- $DAEMON_OPTS
    then
        echo "started."
    else
        echo "failed."
    fi
    ;;
  stop)
    echo -n "Stopping $DESC: "
    if start-stop-daemon --stop --pidfile $PID_FILE
    then
        echo "stopped."
    else
        echo "failed."
    fi
    ;;
  restart|force-reload)
    ${0} stop
    sleep 0.5
    ${0} start
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|force-reload}" &gt;&amp;2
    exit 1
    ;;
esac
exit 0
</code></pre>

<p>To a number suitable for the size of your forum.</p>

<p>I reccomend approximately <code>256mb</code> for the MIN_MEM and <code>1 GB</code> for the MAX_MEM per <code>1 million</code> posts on your forum.</p>

<pre><code>1 Million Posts: 256m:1g
2 Million Posts: 512m:2g
3 Million Posts: 768m:3g
4 Million Posts: 1024m:4g
etc
</code></pre>

<p>This will not mean the service will use all that available memory, however it will have it at its disposal if required.</p>

<p>So for example a <code>3 Million</code> Post forum would edit</p>

<pre><code>export ES_MIN_MEM=768m
export ES_MAX_MEM=3g
</code></pre>

<p>make the script executable and start automaticly.</p>

<pre><code>chmod a+x /etc/init.d/elasticsearch 
update-rc.d elasticsearch defaults
/etc/init.d/elasticsearch start

vi /etc/elasticsearch/elasticsearch.yml
</code></pre>

<p> and add this</p>

<pre><code>#/etc/elasticsearch/elasticsearch.yml
network :
  host :  127.0.0.1
path:
  logs: /var/log/elasticsearch
  data: /var/data/elasticsearch

cluster.name: PUT-SOMETHING-UNIQUE-HERE
</code></pre>

<p>make data folder</p>

<pre><code>mkdir -p  /var/data/elasticsearch
</code></pre>

<p>make sure  <code>127.0.0.1 localhost</code> in your <code>/ect/hosts</code>, this is very important, it&#8217;s waste of my time.</p>

<p>now you can start to build the index.</p>

<pre><code>RAILS_ENV=production rake environment tire:import CLASS='List'
</code></pre>

<p>on mac, there is  a simpler way:</p>

<pre><code>brew install elasticsearch
elasticsearch -f -D es.config=/usr/local/Cellar/elasticsearch/0.18.5/config/elasticsearch.yml
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[add user to group]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/10/30/add-user-to-group/"/>
    <updated>2012-10-30T16:55:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/10/30/add-user-to-group</id>
    <content type="html"><![CDATA[<p>How can I add a user to a group under Linux operating system?</p>

<p>You can use the useradd or usermod commands to add a user to a group. The useradd command creates a new user or update default new user information. The usermod command modifies a user account i.e. it is useful to add user to existing group. There are two types of group. First is primary user group and other is secondary group. All user account related information is stored in <code>/etc/passwd</code>, <code>/etc/shadow</code> and <code>/etc/group</code> files to store user information.</p>

<h3>useradd Example - Add A New User To Secondary Group</h3>

<p>You need to the useradd command to add new users to existing group (or create a new group and then add user). If group does not exist, create it. The syntax is as follows:</p>

<pre><code>useradd -G {group-name} username
</code></pre>

<p>In this example, create a new user called vivek and add it to group called developers. First login as a root user (make sure group developers exists), enter:</p>

<pre><code># grep developers /etc/group
</code></pre>

<p>Output:</p>

<pre><code>developers:x:1124:
</code></pre>

<p>If you do not see any output then you need to add group developers using groupadd command:</p>

<pre><code># groupadd developers
</code></pre>

<p>Next, add a user called vivek to group developers:</p>

<pre><code># useradd -G developers vivek
</code></pre>

<p>Setup password for user vivek:</p>

<pre><code># passwd vivek
</code></pre>

<p>Ensure that user added properly to group developers:</p>

<pre><code># id vivek
</code></pre>

<p>Output:</p>

<pre><code>uid=1122(vivek) gid=1125(vivek) groups=1125(vivek),1124(developers)
</code></pre>

<p>Please note that capital <code>G (-G)</code> option add user to a list of supplementary groups. Each group is separated from the next by a comma, with no intervening whitespace. For example, add user jerry to groups admins, ftp, www, and developers, enter:</p>

<pre><code># useradd -G admins,ftp,www,developers jerry
</code></pre>

<h3>useradd example - Add a new user to primary group</h3>

<p>To add a user tony to group developers use following command:</p>

<pre><code># useradd -g developers tony
# id tony
</code></pre>

<p>Sample outputs:</p>

<pre><code>uid=1123(tony) gid=1124(developers) groups=1124(developers)
</code></pre>

<p>Please note that small -g option add user to initial login group (primary group). The group name must exist. A group number must refer to an already existing group.</p>

<pre><code>usermod example - Add a existing user to existing group
</code></pre>

<p>Add existing user tony to ftp supplementary/secondary group with usermod command using -a option ~ i.e. add the user to the supplemental group(s). Use only with -G option :</p>

<pre><code># usermod -a -G ftp tony
</code></pre>

<p>Change existing user tony primary group to www:</p>

<pre><code># usermod -g www tony
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 'Incorrect key file for table' error]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/10/30/mysql-incorrect-key-file-for-table-error/"/>
    <updated>2012-10-30T02:47:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/10/30/mysql-incorrect-key-file-for-table-error</id>
    <content type="html"><![CDATA[<p>When saving a record to a MySQL table the other day I got the error message &#8220;Incorrect key file for table &#8216;mytable&#8217;; try to repair it&#8221;. I am uncertain why the error occured and how to ensure it doesn&#8217;t happen again in the future but a quick fix for the time being is simple.</p>

<h2>How to repair a MySQL table</h2>

<p>All you need to do is to repair the table by running the following SQL command, where &#8220;mytable&#8221; is the name of the table that gave the error:</p>

<pre><code>REPAIR TABLE `mytable`;
</code></pre>

<p>You can run this from e.g. the MySQL CLI or phpMyAdmin. From phpMyAdmin select the table, then &#8220;Operations&#8221; from the navigation tabs in the right frame above the table info; then &#8220;Repair Table&#8221; from the &#8220;Table maintenance&#8221; options at the bottom of the page.</p>

<h2>When the table is /tmp/#sql_xxx_x.MYI</h2>

<p>If the error looks like &#8220;Incorrect key file for table &#8216;/tmp/#sql_xxx_x.MYI&#8217;; try to repair it&#8221; where it refers to a temporary location on the filesystem, it&#8217;s likely you&#8217;ve run out of diskspace. Read my follow up post for more information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开博了，记录我的脑波]]></title>
    <link href="http://dexterdeng.github.com/blog/2012/10/23/kai-bo-liao-%2Cji-lu-wo-de-nao-bo-.-./"/>
    <updated>2012-10-23T16:21:00+08:00</updated>
    <id>http://dexterdeng.github.com/blog/2012/10/23/kai-bo-liao-,ji-lu-wo-de-nao-bo-.-.</id>
    <content type="html"><![CDATA[<p>开博了，记录我的脑波。。</p>
]]></content>
  </entry>
  
</feed>
